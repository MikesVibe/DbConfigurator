// <auto-generated />
using System;
using DbConfigurator.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DbConfigurator.DataAccess.Migrations
{
    [DbContext(typeof(DbConfiguratorDbContext))]
    [Migration("20230125161809_InitializeDatabase")]
    partial class InitializeDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DbConfigurator.Model.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("DbConfigurator.Model.BuisnessUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("BuisnessUnits");
                });

            modelBuilder.Entity("DbConfigurator.Model.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BuisnessUnitId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Id");

                    b.HasIndex("BuisnessUnitId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("DbConfigurator.Model.DestinationField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.ToTable("DestinationFields");
                });

            modelBuilder.Entity("DbConfigurator.Model.DistributionInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BuisnessUnitId")
                        .HasColumnType("int");

                    b.Property<int>("BusinessUnitId")
                        .HasColumnType("int");

                    b.Property<int>("PriorityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuisnessUnitId");

                    b.HasIndex("PriorityId");

                    b.ToTable("DistributionInformations");
                });

            modelBuilder.Entity("DbConfigurator.Model.Priority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("Id");

                    b.ToTable("Priorities");
                });

            modelBuilder.Entity("DbConfigurator.Model.Recipient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Recipients");
                });

            modelBuilder.Entity("DbConfigurator.Model.RecipientsGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DestinationFieldId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DestinationFieldId");

                    b.ToTable("RecipientsGroups");
                });

            modelBuilder.Entity("DistributionInformationRecipientsGroup", b =>
                {
                    b.Property<int>("DistributionInformationsId")
                        .HasColumnType("int");

                    b.Property<int>("RecipientsGroup_CollectionId")
                        .HasColumnType("int");

                    b.HasKey("DistributionInformationsId", "RecipientsGroup_CollectionId");

                    b.HasIndex("RecipientsGroup_CollectionId");

                    b.ToTable("DistributionInformationRecipientsGroup");
                });

            modelBuilder.Entity("RecipientRecipientsGroup", b =>
                {
                    b.Property<int>("RecipientsGroupsId")
                        .HasColumnType("int");

                    b.Property<int>("RecipientsId")
                        .HasColumnType("int");

                    b.HasKey("RecipientsGroupsId", "RecipientsId");

                    b.HasIndex("RecipientsId");

                    b.ToTable("RecipientRecipientsGroup");
                });

            modelBuilder.Entity("DbConfigurator.Model.BuisnessUnit", b =>
                {
                    b.HasOne("DbConfigurator.Model.Area", null)
                        .WithMany("BuisnessUnits")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DbConfigurator.Model.Country", b =>
                {
                    b.HasOne("DbConfigurator.Model.BuisnessUnit", null)
                        .WithMany("Countries")
                        .HasForeignKey("BuisnessUnitId");
                });

            modelBuilder.Entity("DbConfigurator.Model.DistributionInformation", b =>
                {
                    b.HasOne("DbConfigurator.Model.BuisnessUnit", null)
                        .WithMany("DistributionInformations")
                        .HasForeignKey("BuisnessUnitId");

                    b.HasOne("DbConfigurator.Model.Priority", null)
                        .WithMany("DistributionInformations")
                        .HasForeignKey("PriorityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DbConfigurator.Model.RecipientsGroup", b =>
                {
                    b.HasOne("DbConfigurator.Model.DestinationField", null)
                        .WithMany("RecipientsGroups")
                        .HasForeignKey("DestinationFieldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DistributionInformationRecipientsGroup", b =>
                {
                    b.HasOne("DbConfigurator.Model.DistributionInformation", null)
                        .WithMany()
                        .HasForeignKey("DistributionInformationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbConfigurator.Model.RecipientsGroup", null)
                        .WithMany()
                        .HasForeignKey("RecipientsGroup_CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RecipientRecipientsGroup", b =>
                {
                    b.HasOne("DbConfigurator.Model.RecipientsGroup", null)
                        .WithMany()
                        .HasForeignKey("RecipientsGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DbConfigurator.Model.Recipient", null)
                        .WithMany()
                        .HasForeignKey("RecipientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DbConfigurator.Model.Area", b =>
                {
                    b.Navigation("BuisnessUnits");
                });

            modelBuilder.Entity("DbConfigurator.Model.BuisnessUnit", b =>
                {
                    b.Navigation("Countries");

                    b.Navigation("DistributionInformations");
                });

            modelBuilder.Entity("DbConfigurator.Model.DestinationField", b =>
                {
                    b.Navigation("RecipientsGroups");
                });

            modelBuilder.Entity("DbConfigurator.Model.Priority", b =>
                {
                    b.Navigation("DistributionInformations");
                });
#pragma warning restore 612, 618
        }
    }
}
